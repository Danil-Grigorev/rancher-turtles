
name: release

on:
  workflow_dispatch:
  push:
    tags:
      - "v*" # Push events to matching v*, i.e. v1.0, v20.15.10

jobs:
  build-push-services:
    permissions:
      actions: read
      contents: write
      packages: write
      id-token: write
    strategy:
      matrix:
        destination: [ghcr, prod]
        arch: [amd64] # , arm64, s390x]
        include:
        - destination: ghcr
          registry: ghcr.io
          username: ${{ github.actor }}
          password: GITHUB_TOKEN
          image: GHCR_IMAGE
          org: danil-grigorev
          secret_registry: false
        - destination: prod
          registry: REGISTRY_ENDPOINT
          username: REGISTRY_USERNAME
          password: REGISTRY_PASSWORD
          image: REGISTRY_IMAGE
          org: dgrigorev
          secret_registry: true
    name: Release
    uses: ./.github/workflows/release-workflow.yml
    with:
      password: ${{ matrix.password }}
      username: ${{ matrix.username }}
      registry: ${{ matrix.registry }}
      tag: ${{ github.ref_name }}
      arch: ${{ matrix.arch }}
      org: ${{ matrix.org }}
      image: ${{ matrix.image }}
      secret_registry: ${{ matrix.secret_registry }}
    secrets: inherit

  release:
    name: Create helm release
    needs: [build-push-services]
    runs-on: ubuntu-latest
    permissions:
      contents: write # Allow to create a release.
    env:
      TAG: ${{ github.ref_name }}
      PROD_ORG: rancher-sandbox
      RELEASE_DIR: .cr-release-packages
      CR_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Configure Git
        run: |
          git config user.name "$GITHUB_ACTOR"
          git config user.email "$GITHUB_ACTOR@users.noreply.github.com"
      - name: Package operator chart
        run: RELEASE_TAG=${GITHUB_REF##*/} CHART_PACKAGE_DIR=${RELEASE_DIR} REGISTRY=${{ env.PROD_REGISTRY }} ORG=${{ env.PROD_ORG }} make release

      - name: Install chart-releaser
        uses: helm/chart-releaser-action@v1.5.0
        with:
          install_only: true

      - name: Prepare environment for the chart releaser
        run: |
          echo "CR_OWNER=$(cut -d '/' -f 1 <<< $GITHUB_REPOSITORY)" >> $GITHUB_ENV
          echo "CR_GIT_REPO=$(cut -d '/' -f 2 <<< $GITHUB_REPOSITORY)" >> $GITHUB_ENV
          rm -rf .cr-index
          mkdir -p .cr-index

      - name: Run chart-releaser upload
        run: cr upload --skip-existing -c "$(git rev-parse HEAD)" --generate-release-notes --release-name-template "${{ env.TAG }}" --make-release-latest=false

      - name: Run chart-releaser index
        run: cr index --push --release-name-template "${{ env.TAG }}"
